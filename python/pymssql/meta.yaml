package:
  name: pymssql
  version: "2.1.3"

source:
  url: https://pypi.python.org/packages/4c/c8/5ad36d8d3c304ab4f310c89d0593ab7b6229568dd8e9cde927311b2f0c00/pymssql-2.1.3.tar.gz
  md5: eb159dfeec0d0bc3312f1b24c028a2f4
  patches:
   # List any patch files here
   - 0001-Drop-usage-of-DBVERSION_80-symbol-d90c9b.patch
   - 0002-Change-setup_requires-setuptools_git-to-setuptools.patch
   - 0003-Use-libsybdb-not-db-lib-since-I-renamed-it.patch
   - 0004-Win32-link-to-openssl.patch

# build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - pymssql = pymssql:main
    #
    # Would create an entry point called pymssql that calls pymssql.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - openssl 1.0.*     # [win]
    - python
    - cython
    - setuptools
    - libiconv          # [win]
    - freetds >=1.00.9

  run:
    - python
    - freetds >=1.00.9

test:
  # Python imports
  imports:
    - pymssql

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://pymssql.org
  license: GNU Library or Lesser General Public License (LGPL)
  summary: 'DB-API interface to Microsoft SQL Server for Python. (new Cython-based version)'
  license_family: LGPL
  doc_url: http://www.pymssql.org/en/stable/
  dev_url: https://github.com/pymssql/pymssql

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
